/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.practica8diu;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;

/**
 *
 * @author marti
 */
public class Practica8 extends javax.swing.JFrame {

    private JFileChooser fc= new JFileChooser();
    private FileNameExtensionFilter filtro=null;
    private File fichero;
    private boolean hasWindow;
    private int flagWindow;
    
    public Practica8() {
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        initComponents();
        setLocationRelativeTo(null);
        filtro=new FileNameExtensionFilter("Imágenes (jpg, png, jpeg)", "jpg", "png", "jpeg");
        fc.setFileFilter(filtro);
        avisoLabel.setVisible(false);
        umbralItem.setEnabled(false);
        hasWindow=false;
        flagWindow=0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        avisoLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        abrirItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        closeItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        umbralItem = new javax.swing.JMenuItem();
        ayudaMenu = new javax.swing.JMenu();
        acercaItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        avisoLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        avisoLabel.setText("¡Archivo seleccionado no es una imagen válida!");

        archivoMenu.setMnemonic('A');
        archivoMenu.setText("Archivo");

        abrirItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrirItem.setText("Abrir");
        abrirItem.setToolTipText("");
        abrirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirItemActionPerformed(evt);
            }
        });
        archivoMenu.add(abrirItem);
        archivoMenu.add(jSeparator1);

        closeItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        closeItem.setText("Cerrar aplicación");
        closeItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeItemActionPerformed(evt);
            }
        });
        archivoMenu.add(closeItem);

        jMenuBar1.add(archivoMenu);

        editMenu.setMnemonic('E');
        editMenu.setText("Edición");

        umbralItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        umbralItem.setText("Umbralización");
        umbralItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralItemActionPerformed(evt);
            }
        });
        editMenu.add(umbralItem);

        jMenuBar1.add(editMenu);

        ayudaMenu.setMnemonic('H');
        ayudaMenu.setText("Ayuda");

        acercaItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        acercaItem.setText("Acerca de");
        acercaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaItemActionPerformed(evt);
            }
        });
        ayudaMenu.add(acercaItem);

        jMenuBar1.add(ayudaMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
            .addGroup(layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(avisoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(desktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(avisoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeWindows(){
        JInternalFrame[] ventanas = desktop.getAllFrames();
                 for (JInternalFrame ventana : ventanas) {
                    ventana.dispose();
                }
    }
    
    private void abrirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirItemActionPerformed
        if(hasWindow){
            int res = JOptionPane.showConfirmDialog(rootPane, "¿Estás seguro de que quieres otra imagen? Perderás todas tus ventanas!"
                ,"Cerrar Ventanas Activas", JOptionPane.YES_NO_OPTION);
            if(res==JOptionPane.YES_OPTION){
                closeWindows();
                hasWindow=false;
                flagWindow=0;
            }
            if(res==JOptionPane.NO_OPTION){
                flagWindow=1;
            }
        }
        if(flagWindow==0){
            fc.addChoosableFileFilter(filtro);
            int rDialog=fc.showOpenDialog(null);
            if (rDialog==JFileChooser.APPROVE_OPTION){
                fichero=  fc.getSelectedFile();
                String ext=checkFileExtension(fichero);
                if(ext==""){
                    avisoLabel.setText("¡Intentando abrir algo que no es una imagen!");
                    avisoLabel.setVisible(true);

                }

            }
            if (rDialog==JFileChooser.CANCEL_OPTION){
                avisoLabel.setText("Nada seleccionado");
                avisoLabel.setVisible(true);
            }
        }
            if(!avisoLabel.isVisible()){
                VentanaInterna ventana=new VentanaInterna(this,fichero.getName());
                desktop.add(ventana);
                ventana.setVisible(true);
                ventana.open(fichero);
                umbralItem.setEnabled(true);
                hasWindow=true;
            }



    }//GEN-LAST:event_abrirItemActionPerformed

    private void closeItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeItemActionPerformed
        exitAplication();
    }//GEN-LAST:event_closeItemActionPerformed

    private void umbralItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralItemActionPerformed
        String input = JOptionPane.showInputDialog(rootPane, "Introduzca el valor de umbral.");
        if(input!=null){
            try{
                int umbral = Integer.parseInt(input);
                VentanaInterna ventana=new VentanaInterna(this,"Umbral: "+umbral+" "+fichero.getName());
                desktop.add(ventana);
                ventana.setVisible(true);
                ventana.umbral(fichero, umbral);
                
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(rootPane, "ERROR: Introducir solo números"
                    , "ERROR", JOptionPane.ERROR_MESSAGE);
                umbralItemActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_umbralItemActionPerformed

    private void acercaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaItemActionPerformed
        JOptionPane.showMessageDialog(rootPane,  "Software para aplicar proceso de umbralización de una imagen dado por el usuario.\n" +
            "Product Version: Umbralización Imagen Beta\n"+
            "Devs: @martinvplopez, @joelnavri"
            , "AYUDA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_acercaItemActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        JInternalFrame[] ventanas = desktop.getAllFrames();
        for (JInternalFrame ventana : ventanas) {
            ventana.setLocation(0, 0);
        }
    }//GEN-LAST:event_formComponentResized

        private void exitAplication(){
        fichero=null;
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Quieres cerrar la aplicación?."
                ,"Cerrar Aplicación", JOptionPane.YES_NO_OPTION);
        if(res==JOptionPane.YES_OPTION){
            System.exit(0);
            setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        }
    }  
    
    
    private String checkFileExtension(File fichero){
        String [] extensionArr= fichero.getName().split("\\.");
            String extension= extensionArr[extensionArr.length-1].trim();
            System.out.println("Fichero: " + fichero.getName()+ " extension: " + extensionArr[extensionArr.length-1]);
            switch(extension){
                case "jpg":
                    avisoLabel.setVisible(false);
                    return "jpg";
                case "png":
                    avisoLabel.setVisible(false);
                    return "png";
                case "jpeg":
                    avisoLabel.setVisible(false);
                    return "jpeg";
                default:
                    avisoLabel.setText("Archivo seleccionado no es una imagen válida. Comprueba la extensión");
                    avisoLabel.setVisible(true);
                    return "";
            }

    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica8().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirItem;
    private javax.swing.JMenuItem acercaItem;
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JLabel avisoLabel;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JMenuItem closeItem;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem umbralItem;
    // End of variables declaration//GEN-END:variables
}
